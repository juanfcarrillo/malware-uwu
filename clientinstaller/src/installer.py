import win32api
from subprocess import Popen
from pathlib import Path

def main():
   # Global variables
	BINARY_NAME = 'clientenet.exe'
	CURRENT_DIRECTORY = Path().resolve()

   # Get user full name
	userName = win32api.GetUserNameEx(2)
	firstPart = userName.split('\\')[0]
	secondPart = userName.split('\\')[1]
	unifiedName = f"{firstPart.upper()}\\{secondPart}"

   # Get the absoulte path of the configuration files
	configPath = CURRENT_DIRECTORY / 'installer/config'

   # Read skeleton xml file configuration
	baseXml: str
	settingsPath = configPath / 'schedule_settings.xml'
	with open(f'{settingsPath}', 'rb') as f:
		baseXml = f.read().decode('utf-8')
	
   # Setting the binary full path
	binaryAbsolutePath = CURRENT_DIRECTORY / BINARY_NAME

   # Formatting the xml file to the specific user
	baseXml = baseXml.replace('[username_replace]', unifiedName)
	baseXml = baseXml.replace('[path_replace]', f'{binaryAbsolutePath}')

   # Writing the xml file configuration
	configPath = configPath / 'schedule_config.xml'
	with open(f'{configPath}', 'w', encoding='utf-8') as f:
		f.write(baseXml)
	
   # Creating the task
	Popen(['schtasks.exe', '/create', '/tn', 'Net', '/xml', f'{configPath}'], shell=False)


if __name__ == "__main__":
    main()
