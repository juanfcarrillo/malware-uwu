import sys

def toBin(mesage):
	return (format(ord(i), '08b') for i in mesage)

def encodeMesageToPixels(pixelDataList, mesage):
	# Mesage = 'Hola'
	binMesage = toBin(mesage)
	# Mesage -> 'Hola' -> '0100100001101111011011110110000101110010'

	imdata = iter(pixelDataList)
	# imdata.__next__() -> (255, 255, 255) -> (254, 255, 254)
	# imdata.__next__() -> (255, 255, 0)
	# imdata.__next__() -> (255, 255, 3)
	encodedPixels = []

	for mesage in binMesage:
		# 1 mesage -> '-0-100 1000'

		toWritePixels = list(imdata.__next__()[:3] + imdata.__next__()[:3] + imdata.__next__()[:3])
		# toWritePixels -> [254, 255, 254, 255, 255, 0, 255, 255, 3]

		for indexBite, bite in enumerate(mesage):
			# 1 bite -> 0

			if (bite == '0' and toWritePixels[indexBite] % 2 != 0):
					toWritePixels[indexBite] -= 1
					# 0 -> 255 -> 254
					# 255 -> 254
			elif (bite == '1' and toWritePixels[indexBite] % 2 == 0 and toWritePixels[indexBite] != 0):
				toWritePixels[indexBite] -= 1
				# 1
				# 254 -> 253
			elif (bite == '1' and toWritePixels[indexBite] == 0):
				toWritePixels[indexBite] += 1
				# 1
				# 0 -> 1

		if (toWritePixels[-1] % 2 != 0):
			toWritePixels[-1] -= 1
			# 253 -> 252
		encodedPixels.append(toWritePixels)

	# Bit de finalizacion
	if (encodedPixels[-1][-1] % 2 == 0):
		if encodedPixels[-1][-1] != 0:
			encodedPixels[-1][-1] -= 1
		else:
			encodedPixels[-1][-1] += 1

	for xPixels in encodedPixels:
		auxPix = tuple(xPixels)

		yield auxPix[:3]
		yield auxPix[3:6]
		yield auxPix[6:9]

def encodeMesageToImage(baseImage, data):
	toEncodeImage = baseImage.copy()
	w = toEncodeImage.size[0]
	x, y = 0, 0

	for pixel in encodeMesageToPixels(toEncodeImage.getdata(), data):
		toEncodeImage.putpixel((x, y), pixel)
		if (x == w - 1):   
			x = 0
			y += 1
		else:
			x += 1
		
	return toEncodeImage

if __name__ == '__main__':
	args = sys.argv
	if (len(args) != 3):
		print("Usage: python steg.py <image> <data>")
		exit(0)